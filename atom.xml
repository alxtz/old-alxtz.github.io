<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-10T16:30:03.478Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Alex Tzeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>給 HR 和 Interviewer 的 FAQ</title>
    <link href="http://yoursite.com/2019/07/10/faq/"/>
    <id>http://yoursite.com/2019/07/10/faq/</id>
    <published>2019-07-09T16:00:00.000Z</published>
    <updated>2019-07-10T16:30:03.478Z</updated>
    
    <content type="html"><![CDATA[<h4 id="寫這篇文章的動機："><a href="#寫這篇文章的動機：" class="headerlink" title="寫這篇文章的動機："></a>寫這篇文章的動機：</h4><p>面試實在是太多陳腔濫調的問題了，我想統一寫一個 FAQ。<br>不只是可以節省辛苦的 HR 小哥哥小姊姊們在電話裡問我的時間，同時也方便我複製。</p><hr><hr><hr><hr><hr><h1 id="一般問題-跟技術、工作經驗無關的"><a href="#一般問題-跟技術、工作經驗無關的" class="headerlink" title="一般問題 (跟技術、工作經驗無關的)"></a>一般問題 (跟技術、工作經驗無關的)</h1><h2 id="1-你叫做什麼名字"><a href="#1-你叫做什麼名字" class="headerlink" title="1. 你叫做什麼名字"></a>1. 你叫做什麼名字</h2><p>英文：Alex Tzeng<br>中文：曾苔眠 (是本名)</p><p>這些資訊在 Facebook 都看得到 <a href="https://www.facebook.com/alxtz.tw" target="_blank" rel="noopener">https://www.facebook.com/alxtz.tw</a> (貼文皆公開)</p><h2 id="2-你有哪些聯絡方式"><a href="#2-你有哪些聯絡方式" class="headerlink" title="2. 你有哪些聯絡方式"></a>2. 你有哪些聯絡方式</h2><p>Email：<a href="mailto:alxtz.tw@gmail.com" target="_blank" rel="noopener">alxtz.tw@gmail.com</a> (ㄧ定找的到)<br>Facebook：<a href="https://www.facebook.com/alxtz.tw" target="_blank" rel="noopener">https://www.facebook.com/alxtz.tw</a></p><h2 id="3-目前你待在哪間公司-更：2019-7-11"><a href="#3-目前你待在哪間公司-更：2019-7-11" class="headerlink" title="3. 目前你待在哪間公司 (更：2019.7.11)"></a>3. 目前你待在哪間公司 (更：2019.7.11)</h2><p>2019 年 4 月剛從 Positive Grid 離開，現在做自己的 side project 與讀自己有興趣的東西中。<br>(我的書單 <a href="https://hackmd.io/aNCDy3iOS26vpmM2O-ml8A" target="_blank" rel="noopener">https://hackmd.io/aNCDy3iOS26vpmM2O-ml8A</a>)</p><h2 id="4-相關個人-Profile"><a href="#4-相關個人-Profile" class="headerlink" title="4. 相關個人 Profile"></a>4. 相關個人 Profile</h2><p>LinkedIn：<a href="https://www.linkedin.com/in/alxtz/" target="_blank" rel="noopener">https://www.linkedin.com/in/alxtz/</a> (很常用)<br>GitHub：<a href="https://github.com/alxtz" target="_blank" rel="noopener">https://github.com/alxtz</a> (只有拿來維護自己的 Atom 套件)<br>Blog：<a href="https://alxtz.github.io/" target="_blank" rel="noopener">https://alxtz.github.io/</a> (你正在看的網站，不常更新)<br>Medium：<a href="https://medium.com/@alxtz.tw" target="_blank" rel="noopener">https://medium.com/@alxtz.tw</a> (跟 Blog 混雜著用，不常更新)<br>Twitter：<a href="https://twitter.com/maybealxtz" target="_blank" rel="noopener">https://twitter.com/maybealxtz</a> (用來追技術的主要管道，很常發文)</p><h1 id="技術問題-前端、後端、上廁所邊寫的東西"><a href="#技術問題-前端、後端、上廁所邊寫的東西" class="headerlink" title="技術問題 (前端、後端、上廁所邊寫的東西)"></a>技術問題 (前端、後端、上廁所邊寫的東西)</h1><h2 id="1-你有哪些能夠展示的專案嗎？"><a href="#1-你有哪些能夠展示的專案嗎？" class="headerlink" title="1. 你有哪些能夠展示的專案嗎？"></a>1. 你有哪些能夠展示的專案嗎？</h2><h4 id="BIAS-FX2"><a href="#BIAS-FX2" class="headerlink" title="BIAS FX2"></a>BIAS FX2</h4><blockquote><p><img src="https://i.imgur.com/z4Zh6PN.jpg" alt><br>在 Positive Grid 這家公司花最久時間，也是成長最多，最辛苦的專案 (淚)</p><p>這個產品的用途、功能，一言以敝之就是「數位效果器」</p><h4 id="什麼是數位效果器？"><a href="#什麼是數位效果器？" class="headerlink" title="什麼是數位效果器？"></a>什麼是數位效果器？</h4><p>如果你有彈過任何吉他 (木吉他、電吉他)</p><p>你會知道，吉他基本上彈弦本身是沒有聲音的，木吉他是靠弦帶動整個木質的音箱來發聲</p><p>而電吉他是</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;寫這篇文章的動機：&quot;&gt;&lt;a href=&quot;#寫這篇文章的動機：&quot; class=&quot;headerlink&quot; title=&quot;寫這篇文章的動機：&quot;&gt;&lt;/a&gt;寫這篇文章的動機：&lt;/h4&gt;&lt;p&gt;面試實在是太多陳腔濫調的問題了，我想統一寫一個 FAQ。&lt;br&gt;不只是可以節省辛苦的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Daily Oops] 取消輸入框的 spellcheck 和 autocorrect</title>
    <link href="http://yoursite.com/2018/07/18/disable-autocorrect/"/>
    <id>http://yoursite.com/2018/07/18/disable-autocorrect/</id>
    <published>2018-07-18T12:48:55.000Z</published>
    <updated>2019-07-10T15:43:34.133Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/gII3aQi.png" alt></p><p>在某些 case，瀏覽器會去呼叫 OS 內建的拼字檢查或錯字校正 API，並在輸入框提醒你打錯字了。</p><p>今天被設計師提醒，才想到這功能也許能關閉。</p><p>在使用 <code>disable spell check input</code> 搜尋後，很快的找到 HTML 有三個屬性可以操作這類行為。分別是</p><ul><li><strong><code>autocorrect=&quot;off&quot;</code> 可以避免自動完成</strong></li><li><strong><code>autocapitalize=&quot;off&quot;</code> 可以避免自動首字大寫</strong></li><li><strong><code>spellcheck=&quot;false&quot;</code> 可以避免在拼字錯誤顯示紅點</strong></li></ul><h1 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck" target="_blank" rel="noopener">spellcheck</a> - MDN<br><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input" target="_blank" rel="noopener">input</a> - MDN<br><a href="https://stackoverflow.com/questions/3496658/html-how-can-i-disable-auto-text-correction-in-my-textarea" target="_blank" rel="noopener">How can i disable auto text correction?</a> - Stack Overflow</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/gII3aQi.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;在某些 case，瀏覽器會去呼叫 OS 內建的拼字檢查或錯字校正 API，並在輸入框提醒你打錯字了。&lt;/p&gt;
&lt;p&gt;今天被設計師提醒，才想到這功能也許能關閉。&lt;/p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在 Hexo 裡加入 Applo Theme 和 Gitalk</title>
    <link href="http://yoursite.com/2018/07/16/hexo-theme-gitalk/"/>
    <id>http://yoursite.com/2018/07/16/hexo-theme-gitalk/</id>
    <published>2018-07-15T17:06:25.000Z</published>
    <updated>2019-07-10T15:43:34.133Z</updated>
    
    <content type="html"><![CDATA[<p>註: 前面的 setup 可以參考 <a href="https://alxtz.github.io/2018/07/15/hexo-on-github/" target="_blank" rel="noopener">https://alxtz.github.io/2018/07/15/hexo-on-github/</a></p><p>大綱:</p><ul><li>安裝 Applo theme</li><li>hexo theme 魔改原理</li><li>加入 Gitalk</li></ul><h1 id="安裝-Apollo-theme"><a href="#安裝-Apollo-theme" class="headerlink" title="安裝 Apollo theme"></a>安裝 Apollo theme</h1><p>因為原版的 <a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="noopener">hexo-theme-apollo</a> 已經不維護了。<br>這邊將會使用由我自己 fork 的版本 <a href="https://github.com/alxtz/hexo-theme-apollo-pug" target="_blank" rel="noopener">hexo-theme-apollo-pug</a></p><ol><li><p>進到你之前創的 hexo 資料夾，執行<br><code>yarn add hexo-renderer-pug hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code><br><img src="https://i.imgur.com/U3zCNGw.png" alt></p></li><li><p><code>git clone https://github.com/alxtz/hexo-theme-apollo-pug themes/apollo</code><br><img src="https://i.imgur.com/5Lgnmph.png" alt><br>在 hexo 裡，新增的 theme 都是以資料夾的形式存在，並放在 <code>theme/</code> 這個資料夾內<br><img src="https://i.imgur.com/9523XzG.png" alt></p></li></ol><ol start="3"><li>回到 <code>_config.yml</code>，找到將 theme 改成 <code>apollo</code> 即可<br><img src="https://i.imgur.com/jXVspDh.png" alt></li></ol><p>重新執行 <code>hexo server</code>，就可以看到啟用新 theme 的 hexo 了<br><img src="https://i.imgur.com/iqog3ut.png" alt></p><h1 id="hexo-theme-魔改原理"><a href="#hexo-theme-魔改原理" class="headerlink" title="hexo theme 魔改原理"></a>hexo theme 魔改原理</h1><p>在 hexo 裡，layout 都是由各個不同的 theme 來改動的。<br>現在我們想在每篇文章底下都加入 Gitalk，其實就是要改動每篇 Apollo 文章所使用的模板。</p><ol><li><p><code>cd themes/apollo/ &amp;&amp; rm -rf .git</code><br>因為先前我們是透過 <code>git clone</code> 的方式來建立 <code>themes/apollo/</code> 的。<br>之後要 commit 相關改動時，如果 <code>BLOG_HEXO_DEMO</code> 底下有資料夾包含了 <code>.git</code>，會被誤認為 git submodule。<br><img src="https://i.imgur.com/A44QD5v.png" alt><br>相對的，如果你想要徹底魔改你的 theme，推薦是創成另一個 git submodule 丟上 github 維護。</p></li><li><p>打開 <code>themes/apollo/layout/post.pug</code><br>可以看到他是專門用來定義每篇 post 的模板。<br>這邊可以發現他早已定義了 <code>comment.pug</code> 這個模板來給我們使用。<br><img src="https://i.imgur.com/se7wwBb.png" alt></p></li><li><p>打開 <code>themes/apollo/layout/partial/comment.pug</code><br>裡面有些邏輯是之前的 theme 所使用的。<br><img src="https://i.imgur.com/30ZArbk.png" alt><br>這邊的內容我們全部都要替換成 Gitalk，待會會來做改動。</p></li></ol><h1 id="加入-Gitalk"><a href="#加入-Gitalk" class="headerlink" title="加入 Gitalk"></a>加入 Gitalk</h1><p>這邊我是參考 <a href="https://github.com/gitalk/gitalk/wiki/%E5%9C%A8hexo%E4%B8%AD%E4%BD%BF%E7%94%A8gitalk" target="_blank" rel="noopener">Gitalk 官方 wiki</a> 的內容。<br>不過同樣也有點年久失修，而且是 ejs 版。<br>所以以下一樣會做介紹。</p><ol><li><p>打開 <code>themes/apollo/layout/partial/head.pug</code><br>加入 Gitalk 所需要的兩個 CDN<br><code>https://unpkg.com/gitalk/dist/gitalk.css</code> 和 <code>https://unpkg.com/gitalk/dist/gitalk.min.js</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">link(rel=&quot;stylesheet&quot;,href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;)</span><br><span class="line">script(src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;)</span><br></pre></td></tr></table></figure><p>這樣會在部落格的每個頁面都引入 Gitalk 所需要的 css 和 js。<br><img src="https://i.imgur.com/osw3xZt.png" alt></p><p>需要 debug 的話，可以打開 dev tool 看是否有真的被引入。<br><img src="https://i.imgur.com/mnLTQsx.png" alt></p></li><li><p>Gitalk 本身的用法並不難，以下 12 行 script 就足以加入。<br>不過在使用前，得先去讓給予 Gitalk 權限，讓他可以在我們的 repo 上開 issue。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span></span><br><span class="line"><span class="javascript">    clientID: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">    clientSecret: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">    id: <span class="built_in">window</span>.location.pathname,</span></span><br><span class="line"><span class="javascript">    repo: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">    owner: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">    admin: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">    distractionFreeMode: <span class="literal">false</span></span></span><br><span class="line">  &#125;)</span><br><span class="line"><span class="javascript">  gitalk.render(<span class="string">'gitalk-container'</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>點開 <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a><br>Application name 可以任意填。<br>Homepage URL 和 Authorization callback URL 都要輸入你的 blog 網址。<br><img src="https://i.imgur.com/X0PWA9w.png" alt><br>創建完後，就可以來設置 Gitalk 了<br><img src="https://i.imgur.com/3EJku9Q.png" alt></p></li><li><p>改動剛剛介紹的 <code>comment.pug</code>，內容改為</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#gitalk-container</span><br><span class="line"></span><br><span class="line">script.</span><br><span class="line">  <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">    clientID: <span class="string">''</span>,</span><br><span class="line">    clientSecret: <span class="string">''</span>,</span><br><span class="line">    id: <span class="built_in">window</span>.location.pathname,</span><br><span class="line">    repo: <span class="string">'hexo-demo.github.io'</span>,</span><br><span class="line">    owner: <span class="string">'hexo-demo'</span>,</span><br><span class="line">    admin: [<span class="string">'hexo-demo'</span>],</span><br><span class="line">    distractionFreeMode: <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">  gitalk.render(<span class="string">'gitalk-container'</span>)</span><br></pre></td></tr></table></figure><p><code>clientID</code> 和 <code>clientSecret</code> 請填入剛剛創建完頁面所取得的資訊。<br><code>repo</code> 填入 GitHub repo 的名稱。<br><code>owner</code> 和 <code>admin</code> 填入你的使用者名稱 (註: admin 是一個陣列)。<br><img src="https://i.imgur.com/iTP8VQJ.png" alt></p></li><li><p>改完後就可以看到 Gitalk 被加入了 (可能會需要重開 hexo server，或重新 generate)<br>(在 hexo server 環境下會無法成功登入，要 deploy 上去才能使用)<br><img src="https://i.imgur.com/9Lc1HOB.png" alt></p></li></ol><p>最後結果：<br><img src="https://i.imgur.com/HdP3BhO.png" alt></p><h1 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h1><p>hexo theme <a href="https://hexo.io/docs/themes.html" target="_blank" rel="noopener">https://hexo.io/docs/themes.html</a><br>Gitalk README <a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">https://github.com/gitalk/gitalk</a><br>demo <a href="https://hexo-demo.github.io/2018/07/15/hello-world/" target="_blank" rel="noopener">https://hexo-demo.github.io/2018/07/15/hello-world/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;註: 前面的 setup 可以參考 &lt;a href=&quot;https://alxtz.github.io/2018/07/15/hexo-on-github/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://alxtz.github.io/201
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何在 GitHub 上架一個 Hexo 部落格</title>
    <link href="http://yoursite.com/2018/07/15/hexo-on-github/"/>
    <id>http://yoursite.com/2018/07/15/hexo-on-github/</id>
    <published>2018-07-15T11:51:33.000Z</published>
    <updated>2019-07-10T15:43:34.133Z</updated>
    
    <content type="html"><![CDATA[<h4 id="大綱"><a href="#大綱" class="headerlink" title="大綱"></a>大綱</h4><ul><li>建一個新 repo</li><li>建立 hexo 環境</li><li>開啟 hexo-server</li><li>deploy 到 GitHub</li></ul><h1 id="創建新的-GitHub-repo"><a href="#創建新的-GitHub-repo" class="headerlink" title="創建新的 GitHub repo"></a>創建新的 GitHub repo</h1><p>首先，點進 <a href="https://github.com/new" target="_blank" rel="noopener">https://github.com/new</a> 來創建一個新的 repo</p><p><img src="https://i.imgur.com/ciOa1ze.png" alt></p><p>這邊要注意，repo name 一定得是 <code>${username}.github.io</code></p><p>像是我剛創的使用者帳號為 <code>hexo-demo</code>，這個 repo 一定得叫 <code>hexo-demo.github.io</code></p><p><img src="https://i.imgur.com/2mEKjYG.png" alt></p><p>按下 create 後，這個 repo 就先放著，後來會用到</p><p><img src="https://i.imgur.com/J4F9MZ4.png" alt></p><h1 id="建立-hexo-環境"><a href="#建立-hexo-環境" class="headerlink" title="建立 hexo 環境"></a>建立 hexo 環境</h1><p>網路上其實已經有不少 <a href="https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39" target="_blank" rel="noopener">gist</a> 介紹要用哪些 command 來安裝 hexo 了</p><blockquote><p>[環境]<br><code>nodejs=9.9.0</code><br><code>npm=5.6.0</code><br><code>yarn=1.6.0</code></p></blockquote><ol><li><p><code>npm install -g hexo-cli@1.1.0</code></p><p><img src="https://i.imgur.com/Ld5AuIR.png" alt></p></li><li><p>安裝完後，可以使用 <code>hexo -v</code> 來試試看是否有裝到正確的版本<br>  <img src="https://i.imgur.com/wZznxtf.png" alt></p></li><li><p><code>hexo init &lt;資料夾名稱&gt;</code><br><img src="https://i.imgur.com/8ePCyYS.png" alt></p></li><li><p>執行成功的結果<br><img src="https://i.imgur.com/J1RVFK1.png" alt></p></li><li><p><code>cd BLOG_HEXO_DEMO</code>, <code>ls</code><br><img src="https://i.imgur.com/6yEpq5l.png" alt><br>進到剛剛創建的資料夾來看看。<br>如果有仔細研究 <code>4.</code> 的執行結果的話。<br>可以發現 hexo 預設使用的是 yarn，並且已經先執行了 <code>yarn</code> 來裝好所有 dependency 了。</p></li></ol><h1 id="開啟-hexo-server"><a href="#開啟-hexo-server" class="headerlink" title="開啟 hexo-server"></a>開啟 hexo-server</h1><ol><li><p><code>yarn add hexo-server@0.3.2</code><br><img src="https://i.imgur.com/Hwrakia.png" alt><br>hexo 本身的 hexo-server 和 hexo-cli 是分開的，所以要額外裝 (<a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">doc</a>)</p></li><li><p>將 hexo server 寫成一個 npm script</p><p> 打開 <code>BLOG_HEXO_DEMO</code> 底下的 package.json，新增一段 npm script<br> <img src="https://i.imgur.com/MbCLgDS.png" alt></p></li><li><p><code>yarn run dev</code><br><img src="https://i.imgur.com/tXrCVR5.png" alt><br>執行後可以開啟 hexo-server，url 為 <code>https://localhost:4000</code>。<br>打開瀏覽器就可看到預覽內容。<br><img src="https://i.imgur.com/oWtKLoP.jpg" alt></p></li></ol><h1 id="deploy-到-GitHub"><a href="#deploy-到-GitHub" class="headerlink" title="deploy 到 GitHub"></a>deploy 到 GitHub</h1><p><a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">參考文件</a></p><ol><li><p>修改 <code>BLOG_HEXO_DEMO</code> 底下的 <code>_config.yml</code><br><img src="https://i.imgur.com/xafr7DV.png" alt><br>找到 <code>deploy:</code> 這段，將他改成</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/hexo-demo/hexo-demo.github.io</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>url 請使用先前創建的 repo url<br><img src="https://i.imgur.com/2ejvRof.png" alt></p></li><li><p>init repo<br><code>git init</code><br><img src="https://i.imgur.com/lCnZSEb.png" alt><br>用 quick &amp; dirty 的方式將所有檔案加進 commit 裡<br><img src="https://i.imgur.com/HnbFhoH.png" alt></p></li><li><p>推上 dev<br>為了後續好管理，我決定使用 dev 來當作放 blog source code 的 branch。<br>而 master 已經在先前設置過，將會當作顯示 hexo 網頁用的 branch。<br><img src="https://i.imgur.com/8etnI7X.png" alt><br>用 <code>git remote add GitHub https://github.com/hexo-demo/hexo-demo.github.io</code><br>和 <code>git push GitHub dev</code> 推上去即可<br><img src="https://i.imgur.com/JDvWqc1.png" alt><br>可以看到我們 blog 的 source code 已經推上 GitHub 的 dev<br><img src="https://i.imgur.com/fMiv9SR.png" alt></p></li><li><p>在 <code>package.json</code> 裡新增另一段 script<br><code>&quot;deploy&quot;: &quot;hexo clean &amp;&amp; hexo deploy&quot;</code><br><img src="https://i.imgur.com/4OlaqKE.png" alt></p><p>接著 <code>yarn add hexo-deployer-git</code><br>有了 <code>hexo-deployer-git</code>，<code>hexo deploy</code> 才能使用 git 自動 push 上 master</p><p><img src="https://i.imgur.com/jWzv8jf.png" alt></p></li><li><p><code>yarn run deploy</code><br><img src="https://i.imgur.com/yFXnttk.png" alt><br>接著上剛剛 repo 的 <code>master</code> 看，會發現 hexo 生成的 html, css 都已經被自動推上去了。<br><img src="https://i.imgur.com/yYMxuHQ.png" alt><br>打開 <code>https://hexo-demo.github.io/</code><br>就可以看到我們剛生成的部落格。<br><img src="https://i.imgur.com/eLyWjte.jpg" alt></p></li></ol><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p>hexo 有非常不錯的<a href="https://hexo.io/docs/setup.html" target="_blank" rel="noopener">官方文件</a><br>這篇文章 demo 使用的 <a href="https://github.com/hexo-demo/hexo-demo.github.io" target="_blank" rel="noopener">repo</a><br>demo 結果 <a href="https://hexo-demo.github.io/" target="_blank" rel="noopener">https://hexo-demo.github.io/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;大綱&quot;&gt;&lt;a href=&quot;#大綱&quot; class=&quot;headerlink&quot; title=&quot;大綱&quot;&gt;&lt;/a&gt;大綱&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;建一個新 repo&lt;/li&gt;
&lt;li&gt;建立 hexo 環境&lt;/li&gt;
&lt;li&gt;開啟 hexo-server&lt;/li&gt;
&lt;li&gt;d
      
    
    </summary>
    
    
  </entry>
  
</feed>
